// Generated by BUCKLESCRIPT VERSION 4.0.17, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Input$ReactTemplate = require("./Input.bs.js");

var component = ReasonReact.reducerComponent("App");

var style = {
  display: "flex",
  height: "100vh",
  width: "100vw",
  alignItems: "center",
  flexDirection: "column",
  justifyContent: "center"
};

function make(param) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              return React.createElement("div", {
                          style: style
                        }, "This will be a todo list", ReasonReact.element(undefined, undefined, Input$ReactTemplate.make((function ($$event) {
                                    return Curry._1(send, /* HasInput */[$$event.target.value]);
                                  }), param[/* state */1][/* input */0], /* array */[])));
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* input */"",
                      /* todos : [] */0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[
                            /* input */action[0],
                            /* todos */state[/* todos */1]
                          ]]);
              } else {
                return /* Update */Block.__(0, [/* record */[
                            /* input */"",
                            /* todos : :: */[
                              state[/* input */0],
                              state[/* todos */1]
                            ]
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.style = style;
exports.make = make;
/* component Not a pure module */
